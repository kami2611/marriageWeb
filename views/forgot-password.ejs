<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Forgot Password - D'amour Muslim Matchmaking</title>

  <!-- SEO Meta Tags -->
  <meta name="description" content="Reset your D'amour Muslim account password. Enter your email address to receive password reset instructions.">
  <link rel="canonical" href="https://damourmuslim.com/forgot-password">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16.png">
  <link rel="icon" type="image/x-icon" href="/images/favicon.ico">
  <link rel="manifest" href="/images/site.webmanifest">
  <meta name="theme-color" content="#E91E63">

  <script src="https://cdn.tailwindcss.com"></script>
<script>
  tailwind.config = {
    theme: {
      extend: {
        colors: {
          primary: '#E91E63',
          secondary: '#673AB7',
        },
        borderRadius: {
          'button': '8px',
        },
      }
    }
  }
</script>

  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#E91E63',
            secondary: '#673AB7'
          },
          borderRadius: {
            'button': '8px'
          }
        }
      }
    }
  </script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Roboto:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">

  <style>
    .material-shadow {
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .material-shadow-hover {
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    }

    .ripple {
      position: relative;
      overflow: hidden;
    }

    .ripple::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.3);
      transform: translate(-50%, -50%);
      transition: width 0.6s, height 0.6s;
    }

    .ripple:active::before {
      width: 300px;
      height: 300px;
    }

    .rate-limited {
      background-color: #fef2f2 !important;
      border-color: #fca5a5 !important;
      cursor: not-allowed !important;
    }

    .rate-limited:hover {
      background-color: #fef2f2 !important;
    }
  </style>
</head>

<body class="bg-gray-50 font-['Roboto']">
  <%- include('partials/header') %>

  <main class="pt-24 pb-16 min-h-screen flex items-center justify-center">
    <div class="w-full max-w-md px-6">
      <div class="bg-white rounded-2xl p-8 material-shadow">
        <div class="text-center mb-8">
          <div class="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
            <i class="ri-lock-password-line text-2xl text-primary"></i>
          </div>
          <h1 class="text-3xl font-bold text-gray-800 mb-3 font-['Playfair_Display']">Forgot Password?</h1>
          <p class="text-gray-600">Enter your email address and we'll send you instructions to reset your password.</p>
        </div>

        <!-- Error/Success Messages -->
        <% if (typeof error !== 'undefined' && error) { %>
        <div class="mb-4 p-4 bg-red-50 border border-red-200 rounded-lg">
          <div class="flex items-center">
            <i class="ri-error-warning-line text-red-500 mr-2"></i>
            <span class="text-red-700"><%= error %></span>
          </div>
        </div>
        <% } %>

        <% if (typeof success !== 'undefined' && success) { %>
        <div class="mb-4 p-4 bg-green-50 border border-green-200 rounded-lg">
          <div class="flex items-center">
            <i class="ri-check-line text-green-500 mr-2"></i>
            <span class="text-green-700"><%= success %></span>
          </div>
        </div>
        <% } %>

        <form id="forgotPasswordForm" class="space-y-6">
          <div class="space-y-2">
            <label for="email" class="block text-sm font-medium text-gray-700">Email Address</label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <i class="ri-mail-line text-gray-400"></i>
              </div>
              <input type="email" id="email" name="email" required class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter your registered email address">
            </div>
            <div id="email-error" class="hidden text-sm text-red-600 mt-1"></div>
          </div>

          <button type="submit" class="w-full flex justify-center py-2.5 px-4 border border-transparent rounded-button shadow-sm text-sm font-medium text-white bg-primary hover:bg-pink-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-all duration-300 ripple material-shadow">
            <span id="button-text">Send Reset Instructions</span>
            <i id="loading-icon" class="ri-loader-4-line animate-spin ml-2 hidden"></i>
          </button>

          <div class="text-center text-sm">
            <span class="text-gray-600">Remember your password?</span>
            <a href="/login" class="font-medium text-primary hover:text-pink-600 transition-colors duration-300 ml-1">Sign in here</a>
          </div>
        </form>

        <!-- No Email Help -->
        <div class="mt-8 p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <div class="flex items-start">
            <i class="ri-information-line text-blue-500 mr-2 mt-0.5"></i>
            <div class="text-sm text-blue-700">
              <p class="font-medium mb-1">Don't have an email address associated with your account?</p>
              <p class="mb-2">Contact us on WhatsApp for assistance with password reset:</p>
              <a href="https://wa.me/+447454516156" target="_blank" class="inline-flex items-center px-3 py-1 bg-green-500 text-white rounded text-xs hover:bg-green-600 transition-colors">
                <i class="ri-whatsapp-line mr-1"></i>
                Chat on WhatsApp
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('forgotPasswordForm');
      const emailInput = document.getElementById('email');
      const emailError = document.getElementById('email-error');
      const buttonText = document.getElementById('button-text');
      const loadingIcon = document.getElementById('loading-icon');

      // Email validation on blur
      emailInput.addEventListener('blur', function() {
        const email = this.value.trim();
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

        if (email && !emailRegex.test(email)) {
          showEmailError('Please enter a valid email address');
          this.classList.add('border-red-300', 'focus:ring-red-500', 'focus:border-red-500');
        } else {
          hideEmailError();
          this.classList.remove('border-red-300', 'focus:ring-red-500', 'focus:border-red-500');
        }
      });

      // Clear error when typing
      emailInput.addEventListener('input', function() {
        if (!emailError.classList.contains('hidden')) {
          hideEmailError();
          this.classList.remove('border-red-300', 'focus:ring-red-500', 'focus:border-red-500');
        }
      });

      // Form submission
      form.addEventListener('submit', async function(e) {
        e.preventDefault();

        const email = emailInput.value.trim();
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

        if (!email) {
          showEmailError('Email address is required');
          emailInput.focus();
          return;
        }

        if (!emailRegex.test(email)) {
          showEmailError('Please enter a valid email address');
          emailInput.focus();
          return;
        }

        // Show loading state
        const submitButton = form.querySelector('button[type="submit"]');
        submitButton.disabled = true;
        buttonText.textContent = 'Sending...';
        loadingIcon.classList.remove('hidden');

        try {
          const response = await fetch('/forgot-password', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              email
            })
          });

          const data = await response.json();

          if (data.success) {
            // Show success message and redirect
            showSuccessMessage('Reset instructions sent! Please check your email.');
            setTimeout(() => {
              window.location.href = '/login';
            }, 3000);
          } else {
            // **NEW**: Handle rate limit errors specifically
            if (data.error && data.error.includes('Too many')) {
              showEmailError(data.error);
              // Disable the form for 5 minutes on rate limit
              setTimeout(() => {
                location.reload();
              }, 5 * 60 * 1000);
            } else {
              showEmailError(data.error || 'Failed to send reset instructions');
            }
          }
        } catch (error) {
          console.error('Forgot password error:', error);
          showEmailError('Network error. Please try again.');
        } finally {
          // Reset button state
          submitButton.disabled = false;
          buttonText.textContent = 'Send Reset Instructions';
          loadingIcon.classList.add('hidden');
        }
      });

      function showEmailError(message) {
        emailError.textContent = message;
        emailError.classList.remove('hidden');
      }

      function hideEmailError() {
        emailError.classList.add('hidden');
      }

      function showSuccessMessage(message) {
        // Remove any existing error
        hideEmailError();

        // Create success message
        const successDiv = document.createElement('div');
        successDiv.className = 'mb-4 p-4 bg-green-50 border border-green-200 rounded-lg';
        successDiv.innerHTML = `
          <div class="flex items-center">
            <i class="ri-check-line text-green-500 mr-2"></i>
            <span class="text-green-700">${message}</span>
          </div>
        `;

        form.insertBefore(successDiv, form.firstChild);
      }
    });
  </script>
</body>

</html>