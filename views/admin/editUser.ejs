<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>D'amour Muslim - Edit User</title>
  <script src="https://cdn.tailwindcss.com/3.4.16"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#E91E63',
            secondary: '#673AB7'
          },
          borderRadius: {
            'none': '0px',
            'sm': '4px',
            DEFAULT: '8px',
            'md': '12px',
            'lg': '16px',
            'xl': '20px',
            '2xl': '24px',
            '3xl': '32px',
            'full': '9999px',
            'button': '8px'
          }
        }
      }
    }
  </script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Pacifico&family=Playfair+Display:wght@400;600;700&family=Roboto:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
  <style>
    :where([class^="ri-"])::before {
      content: "\f3c2";
    }

    .material-shadow {
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .material-shadow-hover {
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    }

    .material-shadow-elevated {
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    }

    .ripple {
      position: relative;
      overflow: hidden;
    }

    .ripple::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.3);
      transform: translate(-50%, -50%);
      transition: width 0.6s, height 0.6s;
    }

    .ripple:active::before {
      width: 300px;
      height: 300px;
    }

    .gradient-bg {
      background: linear-gradient(135deg, #E91E63 0%, #673AB7 100%);
    }

    .tab-active {
      background-color: #E91E63;
      color: white;
    }

    .child-item,
    .education-item {
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      padding: 16px;
      margin-bottom: 12px;
    }

    .hover-overlay {
      position: relative;
    }

    .hover-overlay:hover .absolute {
      opacity: 1 !important;
    }

    /* Upload preview styles */
    .upload-preview {
      position: relative;
      overflow: hidden;
    }

    .upload-preview img {
      transition: all 0.3s ease;
    }

    .upload-preview:hover img {
      transform: scale(1.05);
    }

    /* File input styling */
    .file-input-wrapper {
      position: relative;
      cursor: pointer;
    }
  </style>
</head>

<body class="bg-gray-50 font-['Roboto']">
  <header class="fixed top-0 left-0 right-0 bg-white material-shadow z-50">
    <div class="flex items-center justify-between px-6 h-16">
      <div class="flex items-center">
        <h1 class="text-2xl font-bold text-primary font-['Playfair_Display']">
          <a href="/" class="hover:text-pink-600 transition-colors duration-300 cursor-pointer">
            D'amour Muslim
          </a>
        </h1>
        <span class="ml-4 px-3 py-1 bg-orange-100 text-orange-600 text-sm rounded-full font-medium">
          <i class="ri-edit-line mr-1"></i>Admin Edit Mode
        </span>
      </div>
      <div class="flex items-center gap-4">
        <a href="/admin/dashboard" class="px-6 py-2 border-2 border-gray-500 text-gray-500 hover:bg-gray-500 hover:text-white transition-all duration-300 !rounded-button whitespace-nowrap ripple">
          <i class="ri-arrow-left-line mr-2"></i>Back to Dashboard
        </a>
        <button id="logoutBtn" class="px-6 py-2 border-2 border-red-500 text-red-500 hover:bg-red-500 hover:text-white transition-all duration-300 !rounded-button whitespace-nowrap ripple">
          <i class="ri-logout-box-line mr-2"></i>Logout
        </button>
      </div>
    </div>
  </header>

  <main class="pt-24 pb-16 min-h-screen">
    <div class="max-w-6xl mx-auto px-6">
      <div class="text-center mb-8">
        <h2 class="text-3xl font-bold text-gray-800 mb-3 font-['Playfair_Display']">Edit User Profile</h2>
        <p class="text-gray-600">Editing profile for: <strong><%= userToEdit.username %></strong></p>
      </div>

      <!-- ADD THIS ENTIRE SECTION HERE -->
      <!-- Profile Photo Upload Section -->
      <div class="bg-white rounded-2xl overflow-hidden material-shadow mb-8">
        <!-- Cover Photo -->
        <div class="aspect-[5/2] relative overflow-hidden cursor-pointer hover-overlay" id="coverPhotoContainer">
          <% if (userToEdit.coverPhoto && userToEdit.coverPhoto.url) { %>
          <img id="coverPhotoImg" src="<%= userToEdit.coverPhoto.url %>" class="w-full h-full object-cover" alt="Cover Photo">
          <% } else { %>
          <!-- Default cover image -->
          <% if (userToEdit.gender === 'male') { %>
          <img id="coverPhotoImg" src="https://ui-avatars.com/api/?name=<%= encodeURIComponent(userToEdit.name || userToEdit.username) %>&background=0077be&color=fff&size=800&rounded=false&bold=true&format=png" class="w-full h-full object-cover" alt="Cover Photo">
          <% } else { %>
          <img id="coverPhotoImg" src="https://ui-avatars.com/api/?name=<%= encodeURIComponent(userToEdit.name || userToEdit.username) %>&background=e91e63&color=fff&size=800&rounded=false&bold=true&format=png" class="w-full h-full object-cover" alt="Cover Photo">
          <% } %>
          <% } %>

          <!-- Hover overlay -->
          <div class="absolute inset-0 bg-black bg-opacity-0 hover:bg-opacity-50 transition-all duration-300 flex items-center justify-center opacity-0 hover:opacity-100">
            <div class="text-white text-center">
              <i class="ri-camera-line text-4xl mb-2"></i>
              <p class="font-medium">Change Cover Photo</p>
            </div>
          </div>

          <div class="absolute bottom-0 left-0 right-0 h-32 bg-gradient-to-t from-black/60 to-transparent"></div>
        </div>

        <!-- Profile Content -->
        <div class="relative -mt-24 px-8 pb-8">
          <!-- Profile Picture -->
          <div class="w-48 h-48 rounded-full overflow-hidden border-4 border-white material-shadow mx-auto mb-6 cursor-pointer hover-overlay relative" id="profilePicContainer">
            <% if (userToEdit.profilePic && userToEdit.profilePic.url) { %>
            <img id="profilePicImg" src="<%= userToEdit.profilePic.url %>" class="w-full h-full object-cover" alt="Profile Picture">
            <% } else { %>
            <!-- Default avatar based on gender -->
            <% if (userToEdit.gender === 'male') { %>
            <img id="profilePicImg" src="https://ui-avatars.com/api/?name=<%= encodeURIComponent(userToEdit.name || userToEdit.username) %>&background=0077be&color=fff&size=400&rounded=false&bold=true&format=png" class="w-full h-full object-cover" alt="Profile Picture">
            <% } else { %>
            <img id="profilePicImg" src="https://ui-avatars.com/api/?name=<%= encodeURIComponent(userToEdit.name || userToEdit.username) %>&background=e91e63&color=fff&size=400&rounded=false&bold=true&format=png" class="w-full h-full object-cover" alt="Profile Picture">
            <% } %>
            <% } %>

            <!-- Hover overlay for profile pic -->
            <div class="absolute inset-0 bg-black bg-opacity-0 hover:bg-opacity-50 transition-all duration-300 flex items-center justify-center opacity-0 hover:opacity-100 rounded-full">
              <div class="text-white text-center">
                <i class="ri-camera-line text-2xl mb-1"></i>
                <p class="text-sm font-medium">Change</p>
              </div>
            </div>
          </div>

          <!-- Name and Username -->
          <div class="text-center mb-6">
            <h3 class="text-2xl font-bold text-gray-900 mb-2 font-['Playfair_Display']">
              <%= userToEdit.name || userToEdit.username %>
            </h3>
            <p class="text-gray-600 flex items-center justify-center gap-2">
              <i class="ri-verified-badge-fill text-primary"></i>
              <span>@<%= userToEdit.username %></span>
            </p>
          </div>
        </div>
      </div>

      <!-- Hidden file inputs -->
      <input type="file" id="coverPhotoInput" accept="image/*" style="display: none;">
      <input type="file" id="profilePicInput" accept="image/*" style="display: none;">
      <!-- END OF NEW SECTION -->

      <!-- Tab Navigation -->
      <div class="bg-white rounded-2xl p-2 material-shadow mb-8">
        <div class="flex flex-wrap gap-2">
          <button class="tab-btn tab-active flex-1 py-2.5 px-4 text-center transition-all duration-300 !rounded-button whitespace-nowrap ripple" data-tab="basic">
            <i class="ri-user-line mr-2"></i>Basic Info
          </button>
          <button class="tab-btn flex-1 py-2.5 px-4 text-gray-500 hover:text-primary transition-all duration-300 !rounded-button whitespace-nowrap ripple" data-tab="contact">
            <i class="ri-contacts-line mr-2"></i>Contact & Location
          </button>
          <button class="tab-btn flex-1 py-2.5 px-4 text-gray-500 hover:text-primary transition-all duration-300 !rounded-button whitespace-nowrap ripple" data-tab="appearance">
            <i class="ri-user-heart-line mr-2"></i>Physical Appearance
          </button>
          <button class="tab-btn flex-1 py-2.5 px-4 text-gray-500 hover:text-primary transition-all duration-300 !rounded-button whitespace-nowrap ripple" data-tab="religion">
            <i class="ri-church-line mr-2"></i>Religion & Faith
          </button>
          <button class="tab-btn flex-1 py-2.5 px-4 text-gray-500 hover:text-primary transition-all duration-300 !rounded-button whitespace-nowrap ripple" data-tab="family">
            <i class="ri-group-line mr-2"></i>Family & Background
          </button>
          <button class="tab-btn flex-1 py-2.5 px-4 text-gray-500 hover:text-primary transition-all duration-300 !rounded-button whitespace-nowrap ripple" data-tab="preferences">
            <i class="ri-heart-line mr-2"></i>Partner Preferences
          </button>
        </div>
      </div>


      <!-- Tab Content -->
      <div class="bg-white rounded-2xl p-8 material-shadow">
        <!-- Basic Info Tab -->
        <div id="basic-tab" class="tab-content">
          <h3 class="text-xl font-semibold text-gray-900 mb-6 font-['Playfair_Display']">Basic Information</h3>
          <form class="space-y-6">
            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="username" class="block text-sm font-medium text-gray-700">Username *</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-user-line text-gray-400"></i>
                  </div>
                  <input type="text" disabled id="username" name="username" required class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter username">
                </div>
              </div>
              <div class="space-y-2">
                <label for="name" class="block text-sm font-medium text-gray-700">Full Name</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-user-3-line text-gray-400"></i>
                  </div>
                  <input type="text" id="name" name="name" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter full name">
                </div>
              </div>
            </div>

            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="age" class="block text-sm font-medium text-gray-700">Age</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-calendar-line text-gray-400"></i>
                  </div>
                  <input type="number" id="age" name="age" min="18" max="100" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter age">
                </div>
              </div>
              <div class="space-y-2">
                <label for="gender" class="block text-sm font-medium text-gray-700">Gender</label>
                <select id="gender" disabled name="gender" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                  <option value="">Select Gender</option>
                  <option value="male">Male</option>
                  <option value="female">Female</option>
                </select>
              </div>
            </div>

            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="maritalStatus" class="block text-sm font-medium text-gray-700">Marital Status</label>
                <select id="maritalStatus" name="maritalStatus" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                  <option value="unmarried" <%= (userToEdit.maritalStatus === 'unmarried') ? 'selected' : '' %>>Unmarried</option>
                  <option value="married" <%= (userToEdit.maritalStatus === 'married') ? 'selected' : '' %>>Married</option>
                  <option value="divorced" <%= (userToEdit.maritalStatus === 'divorced') ? 'selected' : '' %>>Divorced</option>
                  <option value="widowed" <%= (userToEdit.maritalStatus === 'widowed') ? 'selected' : '' %>>Widowed</option>
                  <option value="separated" <%= (userToEdit.maritalStatus === 'separated') ? 'selected' : '' %>>Separated</option>
                  <option value="N/A" <%= (!userToEdit.maritalStatus || userToEdit.maritalStatus === 'N/A') ? 'selected' : '' %>>N/A</option>
                </select>
              </div>
              <div class="space-y-2">
                <label for="work" class="block text-sm font-medium text-gray-700">Profession/Work</label>
                <input type="text" id="work" name="work" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter profession">
              </div>
            </div>

            <div class="space-y-2">
              <label for="aboutMe" class="block text-sm font-medium text-gray-700">About Me</label>
              <textarea id="aboutMe" name="aboutMe" rows="4" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Tell us about yourself..."></textarea>
            </div>

            <div class="space-y-2">
              <label for="hobbies" class="block text-sm font-medium text-gray-700">Hobbies (comma separated)</label>
              <input type="text" id="hobbies" name="hobbies" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="e.g., Reading, Swimming, Cooking">
            </div>
          </form>
        </div>

        <!-- Contact & Location Tab -->
        <div id="contact-tab" class="tab-content hidden">
          <h3 class="text-xl font-semibold text-gray-900 mb-6 font-['Playfair_Display']">Contact & Location Information</h3>
          <form class="space-y-6">
            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="contact" class="block text-sm font-medium text-gray-700">Contact Number</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-phone-line text-gray-400"></i>
                  </div>
                  <input type="tel" id="contact" name="contact" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter contact number">
                </div>
              </div>
              <div class="space-y-2">
                <label for="waliMyContactDetails" class="block text-sm font-medium text-gray-700">Wali Contact Details</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-contacts-line text-gray-400"></i>
                  </div>
                  <input type="text" id="waliMyContactDetails" name="waliMyContactDetails" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter wali contact details">
                </div>
              </div>
            </div>

            <div class="space-y-2">
              <label for="adress" class="block text-sm font-medium text-gray-700">Address</label>
              <div class="relative">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <i class="ri-map-pin-line text-gray-400"></i>
                </div>
                <input type="text" id="adress" name="adress" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter address">
              </div>
            </div>

            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="city" class="block text-sm font-medium text-gray-700">City</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-building-line text-gray-400"></i>
                  </div>
                  <input type="text" id="city" name="city" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter city">
                </div>
              </div>
              <div class="space-y-2">
                <label for="state" class="block text-sm font-medium text-gray-700">State/Province</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-map-2-line text-gray-400"></i>
                  </div>
                  <input type="text" id="state" name="state" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter state/province">
                </div>
              </div>
            </div>

            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="country" class="block text-sm font-medium text-gray-700">Country</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-earth-line text-gray-400"></i>
                  </div>
                  <input type="text" id="country" name="country" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter country">
                </div>
              </div>
              <div class="space-y-2">
                <label for="nationality" class="block text-sm font-medium text-gray-700">Nationality</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-flag-line text-gray-400"></i>
                  </div>
                  <input type="text" id="nationality" name="nationality" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter nationality">
                </div>
              </div>
            </div>

            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="birthPlace" class="block text-sm font-medium text-gray-700">Birth Place</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-map-pin-2-line text-gray-400"></i>
                  </div>
                  <input type="text" id="birthPlace" name="birthPlace" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter birth place">
                </div>
              </div>
              <div class="space-y-2">
                <label for="willingToRelocate" class="block text-sm font-medium text-gray-700">Willing to Relocate</label>
                <select id="willingToRelocate" name="willingToRelocate" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                  <option value="true" <%= (userToEdit.willingToRelocate === true) ? 'selected' : '' %>>Yes</option>
                  <option value="false" <%= (userToEdit.willingToRelocate === false) ? 'selected' : '' %>>No</option>
                  <option value="N/A" <%= (userToEdit.willingToRelocate === undefined || userToEdit.willingToRelocate === null) ? 'selected' : '' %>>N/A</option>
                </select>
              </div>
            </div>

            <div class="space-y-2">
              <label for="languagesSpoken" class="block text-sm font-medium text-gray-700">Languages Spoken (comma separated)</label>
              <input type="text" id="languagesSpoken" name="languagesSpoken" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="e.g., English, Arabic, Urdu">
            </div>
          </form>
        </div>

        <!-- Physical Appearance Tab -->
        <div id="appearance-tab" class="tab-content hidden">
          <h3 class="text-xl font-semibold text-gray-900 mb-6 font-['Playfair_Display']">Physical Appearance</h3>
          <form class="space-y-6">
            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="height" class="block text-sm font-medium text-gray-700">Height (cm)</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="ri-ruler-line text-gray-400"></i>
                  </div>
                  <input type="number" id="height" name="height" min="100" max="250" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter height in cm">
                </div>
              </div>
              <div class="space-y-2">
                <label for="build" class="block text-sm font-medium text-gray-700">Build</label>
                <select id="build" name="build" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                  <option value="slim" <%= (userToEdit.build === 'slim') ? 'selected' : '' %>>Slim</option>
                  <option value="average" <%= (userToEdit.build === 'average') ? 'selected' : '' %>>Average</option>
                  <option value="athletic" <%= (userToEdit.build === 'athletic') ? 'selected' : '' %>>Athletic</option>
                  <option value="heavy" <%= (userToEdit.build === 'heavy') ? 'selected' : '' %>>Heavy</option>
                  <option value="N/A" <%= (!userToEdit.build || userToEdit.build === 'N/A') ? 'selected' : '' %>>N/A</option>
                </select>
              </div>
              <% if (userToEdit.gender === 'female') { %>
              <div id="hijabContainer" class="space-y-2"></div>
              <label for="wearHijab" class="block text-sm font-medium text-gray-700">Do you wear hijab?</label>
              <select id="wearHijab" name="wearHijab" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="yes" <%= (userToEdit.wearHijab === 'yes') ? 'selected' : '' %>>Yes</option>
                <option value="no" <%= (userToEdit.wearHijab === 'no') ? 'selected' : '' %>>No</option>
              </select>
            </div>
            <% } else { %>
            <div id="beardContainer" class="space-y-2">
              <label for="beard" class="block text-sm font-medium text-gray-700">Do you have a beard?</label>
              <select id="beard" name="beard" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="no" <%= (userToEdit.beard === 'no') ? 'selected' : '' %>>No</option>
                <option value="short" <%= (userToEdit.beard === 'short') ? 'selected' : '' %>>Short</option>
                <option value="medium" <%= (userToEdit.beard === 'medium') ? 'selected' : '' %>>Medium</option>
                <option value="long" <%= (userToEdit.beard === 'long') ? 'selected' : '' %>>Long</option>
                <option value="N/A" <%= (userToEdit.beard === 'N/A') ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
            <% } %>

        </div>

        <div class="grid md:grid-cols-2 gap-6">
          <div class="space-y-2">
            <label for="eyeColor" class="block text-sm font-medium text-gray-700">Eye Color</label>
            <select id="eyeColor" name="eyeColor" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
              <option value="black" <%= (userToEdit.eyeColor === 'black') ? 'selected' : '' %>>Black</option>
              <option value="brown" <%= (userToEdit.eyeColor === 'brown') ? 'selected' : '' %>>Brown</option>
              <option value="grey" <%= (userToEdit.eyeColor === 'grey') ? 'selected' : '' %>>Grey</option>
              <option value="other" <%= (userToEdit.eyeColor === 'other') ? 'selected' : '' %>>Other</option>
              <option value="N/A" <%= (!userToEdit.eyeColor || userToEdit.eyeColor === 'N/A') ? 'selected' : '' %>>N/A</option>
            </select>
          </div>
          <div class="space-y-2">
            <label for="hairColor" class="block text-sm font-medium text-gray-700">Hair Color</label>
            <select id="hairColor" name="hairColor" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
              <option value="black" <%= (userToEdit.hairColor === 'black') ? 'selected' : '' %>>Black</option>
              <option value="brown" <%= (userToEdit.hairColor === 'brown') ? 'selected' : '' %>>Brown</option>
              <option value="blonde" <%= (userToEdit.hairColor === 'blonde') ? 'selected' : '' %>>Blonde</option>
              <option value="N/A" <%= (!userToEdit.hairColor || userToEdit.hairColor === 'N/A') ? 'selected' : '' %>>N/A</option>
            </select>
          </div>
        </div>

        <div class="grid md:grid-cols-2 gap-6">
          <div class="space-y-2">
            <label for="complexion" class="block text-sm font-medium text-gray-700">Complexion</label>
            <select id="complexion" name="complexion" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
              <option value="fair" <%= (userToEdit.complexion === 'fair') ? 'selected' : '' %>>Fair</option>
              <option value="wheatish" <%= (userToEdit.complexion === 'wheatish') ? 'selected' : '' %>>Wheatish</option>
              <option value="dark" <%= (userToEdit.complexion === 'dark') ? 'selected' : '' %>>Dark</option>
              <option value="N/A" <%= (!userToEdit.complexion || userToEdit.complexion === 'N/A') ? 'selected' : '' %>>N/A</option>
            </select>
          </div>
          <div class="space-y-2">
            <label for="ethnicity" class="block text-sm font-medium text-gray-700">Ethnicity</label>
            <select id="ethnicity" name="ethnicity" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
              <option value="bangladeshi" <%= (userToEdit.ethnicity === 'bangladeshi') ? 'selected' : '' %>>Bangladeshi</option>
              <option value="pakistani" <%= (userToEdit.ethnicity === 'pakistani') ? 'selected' : '' %>>Pakistani</option>
              <option value="indian" <%= (userToEdit.ethnicity === 'indian') ? 'selected' : '' %>>Indian</option>
              <option value="british" <%= (userToEdit.ethnicity === 'british') ? 'selected' : '' %>>British</option>
              <option value="other" <%= (userToEdit.ethnicity === 'other') ? 'selected' : '' %>>Other</option>
              <option value="N/A" <%= (!userToEdit.ethnicity || userToEdit.ethnicity === 'N/A') ? 'selected' : '' %>>N/A</option>
            </select>
          </div>
        </div>

        <div class="grid md:grid-cols-2 gap-6">
          <div class="space-y-2">
            <label for="disability" class="block text-sm font-medium text-gray-700">Disability</label>
            <input type="text" id="disability" name="disability" value="no" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter disability status">
          </div>
          <div class="space-y-2">
            <label for="smoker" class="block text-sm font-medium text-gray-700">Smoker</label>
            <select id="smoker" name="smoker" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
              <option value="true" <%= (userToEdit.smoker === true) ? 'selected' : '' %>>Yes</option>
              <option value="false" <%= (userToEdit.smoker === false) ? 'selected' : '' %>>No</option>
              <option value="N/A" <%= (userToEdit.smoker === undefined || userToEdit.smoker === null) ? 'selected' : '' %>>N/A</option>
            </select>
          </div>
        </div>
        </form>
      </div>

      <!-- Religion & Faith Tab -->
      <div id="religion-tab" class="tab-content hidden">
        <h3 class="text-xl font-semibold text-gray-900 mb-6 font-['Playfair_Display']">Religion & Faith</h3>
        <form class="space-y-6">
          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="religion" class="block text-sm font-medium text-gray-700">Religion</label>
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <i class="ri-church-line text-gray-400"></i>
              </div>
              <input type="text" id="religion" name="religion" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter religion">
            </div>
            <div class="space-y-2">
              <label for="caste" class="block text-sm font-medium text-gray-700">Caste</label>
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <i class="ri-group-line text-gray-400"></i>
              </div>
              <input type="text" id="caste" name="caste" class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter caste">
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="islamicSect" class="block text-sm font-medium text-gray-700">Islamic Sect</label>
              <input type="text" id="islamicSect" name="islamicSect" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter Islamic sect">
            </div>
            <div class="space-y-2">
              <label for="bornMuslim" class="block text-sm font-medium text-gray-700">Born Muslim</label>
              <select id="bornMuslim" name="bornMuslim" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.bornMuslim === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.bornMuslim === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.bornMuslim === undefined || userToEdit.bornMuslim === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="prays" class="block text-sm font-medium text-gray-700">Prays Regularly</label>
              <select id="prays" name="prays" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.prays === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.prays === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.prays === undefined || userToEdit.prays === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
            <div class="space-y-2">
              <label for="celebratesMilaad" class="block text-sm font-medium text-gray-700">Celebrates Milaad</label>
              <select id="celebratesMilaad" name="celebratesMilaad" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.celebratesMilaad === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.celebratesMilaad === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.celebratesMilaad === undefined || userToEdit.celebratesMilaad === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="celebrateKhatams" class="block text-sm font-medium text-gray-700">Celebrates Khatams</label>
              <select id="celebrateKhatams" name="celebrateKhatams" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.celebrateKhatams === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.celebrateKhatams === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.celebrateKhatams === undefined || userToEdit.celebrateKhatams === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>

            <div class="space-y-2">
              <label for="islamIsImportantToMeInfo" class="block text-sm font-medium text-gray-700">How important is Islam to you?</label>
              <textarea id="islamIsImportantToMeInfo" name="islamIsImportantToMeInfo" rows="3" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Describe the importance of Islam in your life"></textarea>
            </div>
          </div>
        </form>
      </div>

      <!-- Family & Background Tab -->
      <div id="family-tab" class="tab-content hidden">
        <h3 class="text-xl font-semibold text-gray-900 mb-6 font-['Playfair_Display']">Family & Background</h3>
        <form class="space-y-6">
          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="fatherName" class="block text-sm font-medium text-gray-700">Father's Name</label>
              <input type="text" id="fatherName" name="fatherName" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter father's name">
            </div>
            <div class="space-y-2">
              <label for="motherName" class="block text-sm font-medium text-gray-700">Mother's Name</label>
              <input type="text" id="motherName" name="motherName" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter mother's name">
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="fatherProfession" class="block text-sm font-medium text-gray-700">Father's Profession</label>
              <input type="text" id="fatherProfession" name="fatherProfession" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter father's profession">
            </div>
            <div class="space-y-2">
              <label for="siblings" class="block text-sm font-medium text-gray-700">Number of Siblings</label>
              <input type="number" id="siblings" name="siblings" min="0" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter number of siblings">
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="livingArrangementsAfterMarriage" class="block text-sm font-medium text-gray-700">Living Arrangements After Marriage</label>
              <select id="livingArrangementsAfterMarriage" name="livingArrangementsAfterMarriage" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="live with parents" <%= (userToEdit.livingArrangementsAfterMarriage === 'live with parents') ? 'selected' : '' %>>Live with parents</option>
                <option value="live alone" <%= (userToEdit.livingArrangementsAfterMarriage === 'live alone') ? 'selected' : '' %>>Live alone</option>
                <option value="live with spouse" <%= (userToEdit.livingArrangementsAfterMarriage === 'live with spouse') ? 'selected' : '' %>>Live with spouse</option>
                <option value="other" <%= (userToEdit.livingArrangementsAfterMarriage === 'other') ? 'selected' : '' %>>Other</option>
                <option value="N/A" <%= (!userToEdit.livingArrangementsAfterMarriage || userToEdit.livingArrangementsAfterMarriage === 'N/A') ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
            <div class="space-y-2">
              <label for="futurePlans" class="block text-sm font-medium text-gray-700">Future Plans</label>
              <select id="futurePlans" name="futurePlans" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="settle abroad" <%= (userToEdit.futurePlans === 'settle abroad') ? 'selected' : '' %>>Settle abroad</option>
                <option value="stay in current country" <%= (userToEdit.futurePlans === 'stay in current country') ? 'selected' : '' %>>Stay in current country</option>
                <option value="other" <%= (userToEdit.futurePlans === 'other') ? 'selected' : '' %>>Other</option>
                <option value="N/A" <%= (!userToEdit.futurePlans || userToEdit.futurePlans === 'N/A') ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="space-y-2">
            <label for="whoCompletedProfile" class="block text-sm font-medium text-gray-700">Who Completed Profile</label>
            <input type="text" id="whoCompletedProfile" name="whoCompletedProfile" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="e.g., Self, Family member">
          </div>

          <!-- Education Section -->
          <div class="space-y-4">
            <div class="flex items-center justify-between">
              <label class="block text-sm font-medium text-gray-700">Education</label>
              <button type="button" id="addEducation" class="px-4 py-2 bg-secondary text-white hover:bg-purple-700 transition-all duration-300 !rounded-button text-sm ripple">
                <i class="ri-add-line mr-1"></i>Add Education
              </button>
            </div>
            <div id="educationContainer" class="space-y-4">
              <!-- Education items will be added here -->
            </div>
          </div>

          <!-- Children Section -->
          <div class="space-y-4">
            <div class="flex items-center justify-between">
              <label class="block text-sm font-medium text-gray-700">Children</label>
              <button type="button" id="addChild" class="px-4 py-2 bg-secondary text-white hover:bg-purple-700 transition-all duration-300 !rounded-button text-sm ripple">
                <i class="ri-add-line mr-1"></i>Add Child
              </button>
            </div>
            <div id="childrenContainer" class="space-y-4">
              <!-- Children items will be added here -->
            </div>
          </div>

          <div class="space-y-2">
            <label for="describeNature" class="block text-sm font-medium text-gray-700">Describe Your Nature</label>
            <textarea id="describeNature" name="describeNature" rows="3" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Describe your nature and personality"></textarea>
          </div>

          <div class="space-y-2">
            <label for="QualitiesThatYouCanBringToYourMarriage" class="block text-sm font-medium text-gray-700">Qualities You Can Bring to Marriage (comma separated)</label>
            <input type="text" id="QualitiesThatYouCanBringToYourMarriage" name="QualitiesThatYouCanBringToYourMarriage" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="e.g., Loyalty, Compassion, Understanding">
          </div>

          <div class="space-y-2">
            <label for="anySpecialInformationPeopleShouldKnow" class="block text-sm font-medium text-gray-700">Any Special Information People Should Know</label>
            <textarea id="anySpecialInformationPeopleShouldKnow" name="anySpecialInformationPeopleShouldKnow" rows="3" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Any special information you'd like to share"></textarea>
          </div>
        </form>
      </div>

      <!-- Partner Preferences Tab -->
      <div id="preferences-tab" class="tab-content hidden">
        <h3 class="text-xl font-semibold text-gray-900 mb-6 font-['Playfair_Display']">Partner Preferences</h3>
        <form class="space-y-6">
          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="preferredAgeRange" class="block text-sm font-medium text-gray-700">Preferred Age Range</label>
              <input type="text" id="preferredAgeRange" name="preferredAgeRange" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="e.g., 25-30">
            </div>
            <div class="space-y-2">
              <label for="preferredHeightRange" class="block text-sm font-medium text-gray-700">Preferred Height Range</label>
              <input type="text" id="preferredHeightRange" name="preferredHeightRange" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="e.g., 160-180 cm">
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="preferredCaste" class="block text-sm font-medium text-gray-700">Preferred Caste</label>
              <input type="text" id="preferredCaste" name="preferredCaste" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter preferred caste">
            </div>
            <div class="space-y-2">
              <label for="preferredEthnicity" class="block text-sm font-medium text-gray-700">Preferred Ethnicity</label>
              <input type="text" id="preferredEthnicity" name="preferredEthnicity" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="Enter preferred ethnicity">
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="allowParnterToWork" class="block text-sm font-medium text-gray-700">Allow Partner to Work</label>
              <select id="allowParnterToWork" name="allowParnterToWork" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.allowParnterToWork === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.allowParnterToWork === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.allowParnterToWork === undefined || userToEdit.allowParnterToWork === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
            <div class="space-y-2">
              <label for="allowPartnerToStudy" class="block text-sm font-medium text-gray-700">Allow Partner to Study</label>
              <select id="allowPartnerToStudy" name="allowPartnerToStudy" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.allowPartnerToStudy === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.allowPartnerToStudy === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.allowPartnerToStudy === undefined || userToEdit.allowPartnerToStudy === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <!-- Acceptance Preferences -->
          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="acceptSomeoneWithChildren" class="block text-sm font-medium text-gray-700">Accept Someone with Children</label>
              <select id="acceptSomeoneWithChildren" name="acceptSomeoneWithChildren" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.acceptSomeoneWithChildren === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.acceptSomeoneWithChildren === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.acceptSomeoneWithChildren === undefined || userToEdit.acceptSomeoneWithChildren === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
            <div class="space-y-2">
              <label for="acceptADivorcedPerson" class="block text-sm font-medium text-gray-700">Accept a Divorced Person</label>
              <select id="acceptADivorcedPerson" name="acceptADivorcedPerson" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.acceptADivorcedPerson === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.acceptADivorcedPerson === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.acceptADivorcedPerson === undefined || userToEdit.acceptADivorcedPerson === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="acceptAWidow" class="block text-sm font-medium text-gray-700">Accept a Widow</label>
              <select id="acceptAWidow" name="acceptAWidow" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.acceptAWidow === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.acceptAWidow === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.acceptAWidow === undefined || userToEdit.acceptAWidow === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
            <div class="space-y-2">
              <label for="agreesWithPolygamy" class="block text-sm font-medium text-gray-700">Agrees with Polygamy</label>
              <select id="agreesWithPolygamy" name="agreesWithPolygamy" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.agreesWithPolygamy === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.agreesWithPolygamy === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.agreesWithPolygamy === undefined || userToEdit.agreesWithPolygamy === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="AcceptSomeoneWithBeard" class="block text-sm font-medium text-gray-700">Accept Someone with Beard</label>
              <select id="AcceptSomeoneWithBeard" name="AcceptSomeoneWithBeard" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.AcceptSomeoneWithBeard === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.AcceptSomeoneWithBeard === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.AcceptSomeoneWithBeard === undefined || userToEdit.AcceptSomeoneWithBeard === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
            <div class="space-y-2">
              <label for="AcceptSomeoneWithHijab" class="block text-sm font-medium text-gray-700">Accept Someone with Hijab</label>
              <select id="AcceptSomeoneWithHijab" name="AcceptSomeoneWithHijab" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.AcceptSomeoneWithHijab === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.AcceptSomeoneWithHijab === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.AcceptSomeoneWithHijab === undefined || userToEdit.AcceptSomeoneWithHijab === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="ConsiderARevert" class="block text-sm font-medium text-gray-700">Consider a Revert</label>
              <select id="ConsiderARevert" name="ConsiderARevert" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.ConsiderARevert === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.ConsiderARevert === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.ConsiderARevert === undefined || userToEdit.ConsiderARevert === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
            <div class="space-y-2">
              <label for="acceptSomeoneInOtherCountry" class="block text-sm font-medium text-gray-700">Accept Someone in Other Country</label>
              <select id="acceptSomeoneInOtherCountry" name="acceptSomeoneInOtherCountry" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.acceptSomeoneInOtherCountry === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.acceptSomeoneInOtherCountry === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.acceptSomeoneInOtherCountry === undefined || userToEdit.acceptSomeoneInOtherCountry === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="willingToSharePhotosUponRequest" class="block text-sm font-medium text-gray-700">Willing to Share Photos Upon Request</label>
              <select id="willingToSharePhotosUponRequest" name="willingToSharePhotosUponRequest" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.willingToSharePhotosUponRequest === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.willingToSharePhotosUponRequest === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.willingToSharePhotosUponRequest === undefined || userToEdit.willingToSharePhotosUponRequest === null) ? 'selected' : '' %>>N/A</option>
              </select>

            </div>
            <div class="space-y-2">
              <label for="willingToMeetUpOutside" class="block text-sm font-medium text-gray-700">Willing to Meet Up Outside</label>
              <select id="willingToMeetUpOutside" name="willingToMeetUpOutside" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.willingToMeetUpOutside === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.willingToMeetUpOutside === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.willingToMeetUpOutside === undefined || userToEdit.willingToMeetUpOutside === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-2">
              <label for="willingToConsiderANonUkCitizen" class="block text-sm font-medium text-gray-700">Willing to Consider a Non-UK Citizen</label>
              <select id="willingToConsiderANonUkCitizen" name="willingToConsiderANonUkCitizen" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 bg-white">
                <option value="true" <%= (userToEdit.willingToConsiderANonUkCitizen === true) ? 'selected' : '' %>>Yes</option>
                <option value="false" <%= (userToEdit.willingToConsiderANonUkCitizen === false) ? 'selected' : '' %>>No</option>
                <option value="N/A" <%= (userToEdit.willingToConsiderANonUkCitizen === undefined || userToEdit.willingToConsiderANonUkCitizen === null) ? 'selected' : '' %>>N/A</option>
              </select>
            </div>
          </div>

          <div class="space-y-2">
            <label for="lookingForASpouseThatIs" class="block text-sm font-medium text-gray-700">Looking for a Spouse That Is</label>
            <input type="text" id="lookingForASpouseThatIs" name="lookingForASpouseThatIs" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="e.g., Educated, Religious, Career-oriented">
          </div>

          <div class="space-y-2">
            <label for="qualitiesYouNeedInYourPartner" class="block text-sm font-medium text-gray-700">Qualities You Need in Your Partner (comma separated)</label>
            <input type="text" id="qualitiesYouNeedInYourPartner" name="qualitiesYouNeedInYourPartner" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white" placeholder="e.g., Honesty, Kindness, Intelligence">
          </div>
        </form>
      </div>

      <!-- Save Button -->
      <div class="flex justify-end pt-6 border-t border-gray-200 mt-8">
        <button type="submit" class="px-8 py-2.5 bg-primary text-white hover:bg-pink-600 transition-all duration-300 !rounded-button whitespace-nowrap ripple material-shadow">
          <i class="ri-save-line mr-2"></i>Save Changes
        </button>
      </div>
    </div>
    </div>
  </main>

  <script src="/js/ripple.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const tabButtons = document.querySelectorAll('.tab-btn');
      const tabContents = document.querySelectorAll('.tab-content');
      const tabs = ['basic', 'contact', 'appearance', 'religion', 'family', 'preferences'];
      let currentTabIndex = 0;

      function showTab(index) {
        // Hide all tabs
        tabContents.forEach(content => content.classList.add('hidden'));
        tabButtons.forEach(btn => {
          btn.classList.remove('tab-active');
          btn.classList.add('text-gray-500');
        });

        // Show current tab
        document.getElementById(tabs[index] + '-tab').classList.remove('hidden');
        const activeButton = document.querySelector(`[data-tab="${tabs[index]}"]`);
        activeButton.classList.add('tab-active');
        activeButton.classList.remove('text-gray-500');
      }

      // Tab button clicks
      tabButtons.forEach((button, index) => {
        button.addEventListener('click', function() {
          currentTabIndex = tabs.indexOf(this.getAttribute('data-tab'));
          showTab(currentTabIndex);
        });
      });

      // Dynamic sections
      let educationCount = 0;
      let childrenCount = 0;

      // Add Education
      document.getElementById('addEducation').addEventListener('click', function() {
        educationCount++;
        const educationHtml = `
          <div class="education-item" data-index="${educationCount}">
            <div class="flex justify-between items-center mb-4">
              <h4 class="font-medium text-gray-900">Education ${educationCount}</h4>
              <button type="button" class="remove-education text-red-500 hover:text-red-700">
                <i class="ri-delete-bin-line"></i>
              </button>
            </div>
            <div class="grid md:grid-cols-3 gap-4">
              <input type="text" name="education[${educationCount}][title]" placeholder="Degree/Title" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
              <input type="text" name="education[${educationCount}][institute]" placeholder="Institute/University" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
              <input type="text" name="education[${educationCount}][year]" placeholder="Year" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
            </div>
          </div>
        `;
        document.getElementById('educationContainer').insertAdjacentHTML('beforeend', educationHtml);
      });

      // Add Child
      document.getElementById('addChild').addEventListener('click', function() {
        childrenCount++;
        const childHtml = `
          <div class="child-item" data-index="${childrenCount}">
            <div class="flex justify-between items-center mb-4">
              <h4 class="font-medium text-gray-900">Child ${childrenCount}</h4>
              <button type="button" class="remove-child text-red-500 hover:text-red-700">
                <i class="ri-delete-bin-line"></i>
              </button>
            </div>
            <div class="grid md:grid-cols-3 gap-4">
              <input type="text" name="children[${childrenCount}][name]" placeholder="Child's Name" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
              <input type="number" name="children[${childrenCount}][age]" placeholder="Age" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
              <input type="text" name="children[${childrenCount}][livingLocation]" placeholder="Living Location" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
            </div>
          </div>
        `;
        document.getElementById('childrenContainer').insertAdjacentHTML('beforeend', childHtml);
      });

      // Remove education/children
      document.addEventListener('click', function(e) {
        if (e.target.closest('.remove-education')) {
          e.target.closest('.education-item').remove();
        }
        if (e.target.closest('.remove-child')) {
          e.target.closest('.child-item').remove();
        }
      });

      // Load existing user data and populate fields
      function loadUserData() {
        <% if (userToEdit) { %>

        // Use JSON.stringify to safely pass the data
        const userDataRaw = <%- JSON.stringify(userToEdit) %>;

        console.log('Raw user data:', userDataRaw); // Debug log

        const userData = {
          // Basic Info - use fallback values
          username: userDataRaw.username || '',
          name: userDataRaw.name || '',
          age: userDataRaw.age || '',
          gender: userDataRaw.gender || '',
          maritalStatus: userDataRaw.maritalStatus || '',
          work: userDataRaw.work || '',
          aboutMe: userDataRaw.aboutMe || '',
          hobbies: Array.isArray(userDataRaw.hobbies) ? userDataRaw.hobbies.join(', ') : '',

          // Contact & Location
          contact: userDataRaw.contact || '',
          waliMyContactDetails: userDataRaw.waliMyContactDetails || '',
          adress: userDataRaw.adress || '',
          city: userDataRaw.city || '',
          state: userDataRaw.state || '',
          country: userDataRaw.country || '',
          nationality: userDataRaw.nationality || '',
          birthPlace: userDataRaw.birthPlace || '',
          willingToRelocate: userDataRaw.willingToRelocate !== undefined ? userDataRaw.willingToRelocate.toString() : '',
          languagesSpoken: Array.isArray(userDataRaw.languagesSpoken) ? userDataRaw.languagesSpoken.join(', ') : '',

          // Physical Appearance
          height: userDataRaw.height || '',
          build: userDataRaw.build || '',
          eyeColor: userDataRaw.eyeColor || '',
          hairColor: userDataRaw.hairColor || '',
          complexion: userDataRaw.complexion || '',
          ethnicity: userDataRaw.ethnicity || '',
          disability: userDataRaw.disability || 'no',
          smoker: userDataRaw.smoker !== undefined ? userDataRaw.smoker.toString() : '',

          // Religion & Faith
          religion: userDataRaw.religion || '',
          caste: userDataRaw.caste || '',
          islamicSect: userDataRaw.islamicSect || '',
          bornMuslim: userDataRaw.bornMuslim !== undefined ? userDataRaw.bornMuslim.toString() : '',
          prays: userDataRaw.prays !== undefined ? userDataRaw.prays.toString() : '',
          celebratesMilaad: userDataRaw.celebratesMilaad !== undefined ? userDataRaw.celebratesMilaad.toString() : '',
          celebrateKhatams: userDataRaw.celebrateKhatams !== undefined ? userDataRaw.celebrateKhatams.toString() : '',
          islamIsImportantToMeInfo: userDataRaw.islamIsImportantToMeInfo || '',

          // Family & Background
          fatherName: userDataRaw.fatherName || '',
          motherName: userDataRaw.motherName || '',
          fatherProfession: userDataRaw.fatherProfession || '',
          siblings: userDataRaw.siblings || '',
          livingArrangementsAfterMarriage: userDataRaw.livingArrangementsAfterMarriage || '',
          futurePlans: userDataRaw.futurePlans || '',
          whoCompletedProfile: userDataRaw.whoCompletedProfile || '',
          describeNature: userDataRaw.describeNature || '',
          QualitiesThatYouCanBringToYourMarriage: Array.isArray(userDataRaw.QualitiesThatYouCanBringToYourMarriage) ? userDataRaw.QualitiesThatYouCanBringToYourMarriage.join(', ') : '',
          anySpecialInformationPeopleShouldKnow: userDataRaw.anySpecialInformationPeopleShouldKnow || '',

          // Partner Preferences
          preferredAgeRange: userDataRaw.preferredAgeRange || '',
          preferredHeightRange: userDataRaw.preferredHeightRange || '',
          preferredCaste: userDataRaw.preferredCaste || '',
          preferredEthnicity: userDataRaw.preferredEthnicity || '',
          allowParnterToWork: userDataRaw.allowParnterToWork !== undefined ? userDataRaw.allowParnterToWork.toString() : '',
          allowPartnerToStudy: userDataRaw.allowPartnerToStudy !== undefined ? userDataRaw.allowPartnerToStudy.toString() : '',
          acceptSomeoneWithChildren: userDataRaw.acceptSomeoneWithChildren !== undefined ? userDataRaw.acceptSomeoneWithChildren.toString() : '',
          acceptADivorcedPerson: userDataRaw.acceptADivorcedPerson !== undefined ? userDataRaw.acceptADivorcedPerson.toString() : '',
          acceptAWidow: userDataRaw.acceptAWidow !== undefined ? userDataRaw.acceptAWidow.toString() : '',
          agreesWithPolygamy: userDataRaw.agreesWithPolygamy !== undefined ? userDataRaw.agreesWithPolygamy.toString() : '',
          AcceptSomeoneWithBeard: userDataRaw.AcceptSomeoneWithBeard !== undefined ? userDataRaw.AcceptSomeoneWithBeard.toString() : '',
          AcceptSomeoneWithHijab: userDataRaw.AcceptSomeoneWithHijab !== undefined ? userDataRaw.AcceptSomeoneWithHijab.toString() : '',
          ConsiderARevert: userDataRaw.ConsiderARevert !== undefined ? userDataRaw.ConsiderARevert.toString() : '',
          acceptSomeoneInOtherCountry: userDataRaw.acceptSomeoneInOtherCountry !== undefined ? userDataRaw.acceptSomeoneInOtherCountry.toString() : '',
          willingToSharePhotosUponRequest: userDataRaw.willingToSharePhotosUponRequest !== undefined ? userDataRaw.willingToSharePhotosUponRequest.toString() : '',
          willingToMeetUpOutside: userDataRaw.willingToMeetUpOutside !== undefined ? userDataRaw.willingToMeetUpOutside.toString() : '',
          lookingForASpouseThatIs: userDataRaw.lookingForASpouseThatIs || '',
          qualitiesYouNeedInYourPartner: Array.isArray(userDataRaw.qualitiesYouNeedInYourPartner) ? userDataRaw.qualitiesYouNeedInYourPartner.join(', ') : '',
          willingToConsiderANonUkCitizen: userDataRaw.willingToConsiderANonUkCitizen !== undefined ? userDataRaw.willingToConsiderANonUkCitizen.toString() : '',
          // Arrays for dynamic content
          education: Array.isArray(userDataRaw.education) ? userDataRaw.education : [],
          children: Array.isArray(userDataRaw.children) ? userDataRaw.children : []
        };

        console.log('Processed user data:', userData); // Debug log

        // Populate regular form fields
        Object.keys(userData).forEach(key => {
          if (key === 'education' || key === 'children') return; // Handle these separately

          const field = document.querySelector(`[name="${key}"]`);
          if (field) {
            console.log(`Populating field ${key} with value:`, userData[key]); // Debug log

            if (field.type === 'checkbox') {
              field.checked = userData[key] === 'true' || userData[key] === true;
            } else if (field.tagName === 'SELECT') {
              // Handle select dropdowns (including the converted radio buttons)
              const option = field.querySelector(`option[value="${userData[key]}"]`);
              if (option) {
                field.value = userData[key];
                console.log(`Set select ${key} to ${userData[key]}`); // Debug log
              }
            } else {
              field.value = userData[key] || '';
              console.log(`Set field ${key} to ${userData[key]}`); // Debug log
            }
          } else {
            console.log(`Field not found for key: ${key}`); // Debug log
          }
        });

        // Populate education with better error handling
        if (userData.education && userData.education.length > 0) {
          userData.education.forEach((edu, index) => {
            educationCount++;
            if (index > 0) {
              // Add new education item if it's not the first one
              const educationHtml = `
                <div class="education-item" data-index="${educationCount}">
                  <div class="flex justify-between items-center mb-4">
                    <h4 class="font-medium text-gray-900">Education ${educationCount}</h4>
                    <button type="button" class="remove-education text-red-500 hover:text-red-700">
                      <i class="ri-delete-bin-line"></i>
                    </button>
                  </div>
                  <div class="grid md:grid-cols-3 gap-4">
                    <input type="text" name="education[${educationCount}][title]" placeholder="Degree/Title" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
                    <input type="text" name="education[${educationCount}][institute]" placeholder="Institute/University" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
                    <input type="text" name="education[${educationCount}][year]" placeholder="Year" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
                  </div>
                </div>
              `;
              document.getElementById('educationContainer').insertAdjacentHTML('beforeend', educationHtml);
            }

            // Fill the education data
            setTimeout(() => {
              const titleField = document.querySelector(`[name="education[${educationCount}][title]"]`);
              const instituteField = document.querySelector(`[name="education[${educationCount}][institute]"]`);
              const yearField = document.querySelector(`[name="education[${educationCount}][year]"]`);

              if (titleField && edu.title) titleField.value = edu.title;
              if (instituteField && edu.institute) instituteField.value = edu.institute;
              if (yearField && edu.year) yearField.value = edu.year;

              console.log(`Populated education ${educationCount}:`, edu); // Debug log
            }, 100);
          });
        }

        // Populate children with better error handling
        if (userData.children && userData.children.length > 0) {
          userData.children.forEach((child, index) => {
            childrenCount++;
            const childHtml = `
              <div class="child-item" data-index="${childrenCount}">
                <div class="flex justify-between items-center mb-4">
                  <h4 class="font-medium text-gray-900">Child ${childrenCount}</h4>
                  <button type="button" class="remove-child text-red-500 hover:text-red-700">
                    <i class="ri-delete-bin-line"></i>
                  </button>
                </div>
                <div class="grid md:grid-cols-3 gap-4">
                  <input type="text" name="children[${childrenCount}][name]" placeholder="Child's Name" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
                  <input type="number" name="children[${childrenCount}][age]" placeholder="Age" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
                  <input type="text" name="children[${childrenCount}][livingLocation]" placeholder="Living Location" class="block w-full px-3 py-2.5 border border-gray-300 rounded-button focus:ring-2 focus:ring-primary focus:border-primary text-gray-900 placeholder-gray-400 bg-white">
                </div>
              </div>
            `;
            document.getElementById('childrenContainer').insertAdjacentHTML('beforeend', childHtml);

            // Fill the children data
            setTimeout(() => {
              const nameField = document.querySelector(`[name="children[${childrenCount}][name]"]`);
              const ageField = document.querySelector(`[name="children[${childrenCount}][age]"]`);
              const locationField = document.querySelector(`[name="children[${childrenCount}][livingLocation]"]`);

              if (nameField && child.name) nameField.value = child.name;
              if (ageField && child.age) ageField.value = child.age;
              if (locationField && child.livingLocation) locationField.value = child.livingLocation;

              console.log(`Populated child ${childrenCount}:`, child); // Debug log
            }, 100);
          });
        }

        <% } else { %>
        console.log('No userToEdit data available'); // Debug log
        <% } %>
      }

      // Form submission handling
      // Form submission handling
      const saveButton = document.querySelector('button[type="submit"]');
      if (saveButton) {
        saveButton.addEventListener('click', function(e) {
          e.preventDefault();

          const submitBtn = this;
          const originalText = submitBtn.textContent;

          // Disable button and show loading
          submitBtn.disabled = true;
          submitBtn.innerHTML = '<i class="ri-loader-4-line animate-spin mr-2"></i>Saving Changes...';

          // Check if we have files to upload
          const hasFiles = (coverPhotoInput.files[0] || profilePicInput.files[0]);

          if (hasFiles) {
            // Use FormData for file uploads
            const formData = new FormData();
            formData.append('userId', '<%= userToEdit._id %>');

            // Add files
            if (coverPhotoInput.files[0]) {
              formData.append('coverPhoto', coverPhotoInput.files[0]);
              console.log('Adding cover photo to upload');
            }

            if (profilePicInput.files[0]) {
              formData.append('profilePic', profilePicInput.files[0]);
              console.log('Adding profile pic to upload');
            }

            // Collect all form data
            const allForms = document.querySelectorAll('.tab-content form');
            const userData = {};

            allForms.forEach(form => {
              const formData = new FormData(form);
              for (let [key, value] of formData.entries()) {
                if (value.trim() === '') continue; // Skip empty values

                if (key.includes('[') && key.includes(']')) {
                  // Handle nested objects (education, children)
                  const match = key.match(/(\w+)\[(\d+)\]\[(\w+)\]/);
                  if (match) {
                    const [, field, index, subfield] = match;
                    if (!userData[field]) userData[field] = [];
                    if (!userData[field][index]) userData[field][index] = {};
                    userData[field][index][subfield] = value.trim();
                  }
                } else if (key === 'hobbies' || key === 'languagesSpoken' || key === 'QualitiesThatYouCanBringToYourMarriage' || key === 'qualitiesYouNeedInYourPartner') {
                  // Handle comma-separated arrays
                  userData[key] = value.split(',').map(item => item.trim()).filter(item => item);
                } else {
                  // Convert string booleans to actual booleans
                  if (value === 'true') {
                    userData[key] = true;
                  } else if (value === 'false') {
                    userData[key] = false;
                  } else if (key === 'age' || key === 'height' || key === 'siblings') {
                    // Convert numeric fields
                    const num = parseInt(value);
                    if (!isNaN(num)) userData[key] = num;
                  } else {
                    userData[key] = value.trim();
                  }
                }
              }
            });

            // Clean up arrays
            if (userData.education) {
              userData.education = userData.education.filter(item =>
                item && (item.title || item.institute || item.year)
              );
              if (userData.education.length === 0) delete userData.education;
            }

            if (userData.children) {
              userData.children = userData.children.filter(item =>
                item && (item.name || item.age || item.livingLocation)
              );
              userData.children.forEach(child => {
                if (child.age) {
                  const age = parseInt(child.age);
                  if (!isNaN(age)) child.age = age;
                }
              });
              if (userData.children.length === 0) delete userData.children;
            }

            formData.append('userData', JSON.stringify(userData));

            console.log('Sending FormData with files and user data');

            // Send FormData
            fetch('/admin/user/update', {
                method: 'POST',
                body: formData
              })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  showNotification('User Updated', 'User profile has been updated successfully!', 'success');
                  // Clear file inputs
                  coverPhotoInput.value = '';
                  profilePicInput.value = '';
                } else {
                  console.error('Backend error:', data.error);
                  showNotification('Error', data.error || 'Failed to update user profile', 'error');
                }
              })
              .catch(error => {
                console.error('Request error:', error);
                showNotification('Error', 'Failed to update user profile. Please try again.', 'error');
              })
              .finally(() => {
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
              });

          } else {
            // No files, use existing JSON logic
            const allForms = document.querySelectorAll('.tab-content form');
            const userData = {};
            userData.userId = '<%= userToEdit._id %>';

            allForms.forEach(form => {
              const formData = new FormData(form);
              for (let [key, value] of formData.entries()) {
                if (value.trim() === '') continue;

                if (key.includes('[') && key.includes(']')) {
                  const match = key.match(/(\w+)\[(\d+)\]\[(\w+)\]/);
                  if (match) {
                    const [, field, index, subfield] = match;
                    if (!userData[field]) userData[field] = [];
                    if (!userData[field][index]) userData[field][index] = {};
                    userData[field][index][subfield] = value.trim();
                  }
                } else if (key === 'hobbies' || key === 'languagesSpoken' || key === 'QualitiesThatYouCanBringToYourMarriage' || key === 'qualitiesYouNeedInYourPartner') {
                  userData[key] = value.split(',').map(item => item.trim()).filter(item => item);
                } else {
                  if (value === 'true') {
                    userData[key] = true;
                  } else if (value === 'false') {
                    userData[key] = false;
                  } else if (key === 'age' || key === 'height' || key === 'siblings') {
                    const num = parseInt(value);
                    if (!isNaN(num)) userData[key] = num;
                  } else {
                    userData[key] = value.trim();
                  }
                }
              }
            });

            if (userData.education) {
              userData.education = userData.education.filter(item =>
                item && (item.title || item.institute || item.year)
              );
              if (userData.education.length === 0) delete userData.education;
            }

            if (userData.children) {
              userData.children = userData.children.filter(item =>
                item && (item.name || item.age || item.livingLocation)
              );
              userData.children.forEach(child => {
                if (child.age) {
                  const age = parseInt(child.age);
                  if (!isNaN(age)) child.age = age;
                }
              });
              if (userData.children.length === 0) delete userData.children;
            }

            console.log('Sending JSON data without files:', userData);

            // Send JSON
            fetch('/admin/user/update', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(userData)
              })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  showNotification('User Updated', 'User profile has been updated successfully!', 'success');
                } else {
                  console.error('Backend error:', data.error);
                  showNotification('Error', data.error || 'Failed to update user profile', 'error');
                }
              })
              .catch(error => {
                console.error('Request error:', error);
                showNotification('Error', 'Failed to update user profile. Please try again.', 'error');
              })
              .finally(() => {
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
              });
          }
        });
      }
      // Logout functionality
      document.getElementById('logoutBtn').addEventListener('click', function() {
        if (confirm('Are you sure you want to logout?')) {
          showNotification('Logged Out', 'You have been successfully logged out.', 'success');
          setTimeout(() => {
            window.location.href = '/logout';
          }, 1000);
        }
      });

      // Notification function
      function showNotification(title, message, type = 'info') {
        const notification = document.createElement('div');
        const bgColor = type === 'success' ? 'bg-green-500' : type === 'info' ? 'bg-blue-500' : 'bg-red-500';
        const icon = type === 'success' ? 'ri-checkbox-circle-line' : type === 'info' ? 'ri-information-line' : 'ri-error-warning-line';

        notification.className = `fixed bottom-4 right-4 ${bgColor} text-white rounded-xl p-4 material-shadow-elevated flex items-center gap-3 transform translate-y-0 opacity-100 transition-all duration-300 z-50`;
        notification.innerHTML = `
          <i class="${icon} text-xl"></i>
          <div>
            <p class="font-medium">${title}</p>
            <p class="text-sm opacity-90">${message}</p>
          </div>
        `;

        document.body.appendChild(notification);

        setTimeout(() => {
          notification.style.transform = 'translateY(100%)';
          notification.style.opacity = '0';
          setTimeout(() => notification.remove(), 300);
        }, 3000);
      }

      // Initialize the form
      showTab(0);
      loadUserData();

      const coverPhotoContainer = document.getElementById('coverPhotoContainer');
      const profilePicContainer = document.getElementById('profilePicContainer');
      const coverPhotoInput = document.getElementById('coverPhotoInput');
      const profilePicInput = document.getElementById('profilePicInput');
      const coverPhotoImg = document.getElementById('coverPhotoImg');
      const profilePicImg = document.getElementById('profilePicImg');

      // Cover photo upload
      if (coverPhotoContainer && coverPhotoInput) {
        coverPhotoContainer.addEventListener('click', function() {
          coverPhotoInput.click();
        });

        coverPhotoInput.addEventListener('change', function(e) {
          const file = e.target.files[0];
          if (file) {
            // Validate file type
            if (!file.type.startsWith('image/')) {
              showNotification('Invalid File', 'Please select a valid image file', 'error');
              return;
            }

            // Validate file size (5MB limit)
            if (file.size > 5 * 1024 * 1024) {
              showNotification('File Too Large', 'Please select an image smaller than 5MB', 'error');
              return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
              coverPhotoImg.src = e.target.result;
              showNotification('Preview Updated', 'Cover photo preview updated. Click "Save Changes" to upload.', 'success');
            };
            reader.readAsDataURL(file);
          }
        });
      }

      // Profile picture upload
      if (profilePicContainer && profilePicInput) {
        profilePicContainer.addEventListener('click', function() {
          profilePicInput.click();
        });

        profilePicInput.addEventListener('change', function(e) {
          const file = e.target.files[0];
          if (file) {
            // Validate file type
            if (!file.type.startsWith('image/')) {
              showNotification('Invalid File', 'Please select a valid image file', 'error');
              return;
            }

            // Validate file size (5MB limit)
            if (file.size > 5 * 1024 * 1024) {
              showNotification('File Too Large', 'Please select an image smaller than 5MB', 'error');
              return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
              profilePicImg.src = e.target.result;
              showNotification('Preview Updated', 'Profile picture preview updated. Click "Save Changes" to upload.', 'success');
            };
            reader.readAsDataURL(file);
          }
        });
      }

    });
  </script>
</body>

</html>